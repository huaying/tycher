import { type GetServerSideProps, type NextPage } from "next";
import Head from "next/head";

import { api } from "~/utils/api";
import {
  SignedOut,
  useUser,
  SignInButton,
  SignedIn,
  UserButton,
} from "@clerk/nextjs";
import { Fragment } from "react";
import { generateSSRHelper } from "~/server/helpers/ssrHelper";

export const getServerSideProps: GetServerSideProps = async (context) => {
  const ssr = generateSSRHelper(context);

  const slug = context.params?.slug;

  if (typeof slug !== "string") throw new Error("no slug");

  await ssr.topic.getTopic.prefetch({ name: slug });

  return {
    props: {
      trpcState: ssr.dehydrate(),
      slug,
    },
  };
};

const TopicPage: NextPage<{ slug: string }> = ({ slug }) => {
  const { data: topic } = api.topic.getTopic.useQuery({ name: slug });
  const { mutate } = api.exam.startExam.useMutation();
  const user = useUser();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <SignedIn>
          <UserButton />
          {user?.user?.fullName}
          {topic && (
            <>
              <div>{topic?.name}</div>
              <div>{topic?.description}</div>
              <button onClick={() => mutate({ topicId: topic?.id })}>
                start
              </button>
            </>
          )}
        </SignedIn>
        <SignedOut>
          <SignInButton />
        </SignedOut>
      </main>
    </>
  );
};

export default TopicPage;
